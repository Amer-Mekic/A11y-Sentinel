generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  projects  Project[]
  createdAt DateTime @default(now())
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String
  sitemap   String?
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  scans     Scan[]
  createdAt DateTime @default(now())
}

model Scan {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  status     ScanStatus   @default(PENDING) // PENDING, RUNNING, COMPLETED, FAILED
  projectId  String       @db.ObjectId
  project    Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  results    ScanResult[]
  score      Int? // Overall average score for this scan
  createdAt  DateTime     @default(now())
}

model ScanResult {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  scanId      String   @db.ObjectId
  scan        Scan     @relation(fields: [scanId], references: [id], onDelete: Cascade)
  pageUrl     String
  errorCount  Int
  warnings    Int
  violations  Json     // Detailed axe-core results stored as JSON
  screenshot  String?  // URL to uploaded screenshot in S3/Cloudinary (will choose later which service to use)
  createdAt   DateTime @default(now())
}

enum ScanStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
}